#!/bin/bash

# Kindly supply your Github Username and Personal Access Token(without the "ghp_").
GUSERNAME="YOUR_GITHUB_USERNAME"
GTOKEN="YOUR_PERSONAL_ACCESS_TOKEN"
GEMAIL="YOUR_REGISTERED_GITHUB_EMAIL"

UREPO="$1"
CHK="$2"
CLCR="$3"
AUSERNAME="$4"
RESP="$5"
TOKEN="$6"
REPONAME="$7"
NUM1=36
exit_status=0

#...functions .................. #

function exiting ()
{
	echo -e "\nOperation aborted!!!....................."
	exit 1
}

function lines ()
{
	echo ""
	echo ".........................................."
}

echo ""
echo -e "You are attempting to clone a Github repo...\n"
echo -n "Is the Github Account \"$GUSERNAME\" yours? [y/N] >>> "
read UREPO


if [[ ${#UREPO} =~ 1 && ("$UREPO" =~ "y" || "$UREPO" =~ "Y") ]]; then
	CHK="yes"
elif [[ ${#UREPO} =~ 1 && ("$UREPO" =~ "n" || "$UREPO" =~ "N") ]]; then
	CHK="no"
else
	lines
	echo -e "Invalid response."
	exiting
fi


#... chk.................. #

echo ""
echo -e "Pls, check your PATH and CURRENT DIRECTORY that you are not cloning into an existing repo."

echo -n "Do you want to abort to fix this? [y/N] >>> "
read CLCR

if [[ ${#CLCR} != 1 ]]; then
	echo ""
	echo -e "Invalid response."
	exiting

elif [[ ${#CLCR} =~ 1 && "$CLCR" =~ "y" || "$CLCR" =~ "Y" ]]; then
	echo ""
	echo -e "Ok."
	exiting
fi

if [[ "$CHK" =~ "no" ]]; then
	echo ""
	echo -n "Provide the Github Username >>> "
	read AUSERNAME

	if [ -z "$AUSERNAME" ]; then
		lines
		echo -e "You must provide a valid Username."
		exiting
	fi

	echo ""
	echo -n "Do you have the PAT(classic) for $AUSERNAME's repo? [y/N] >>> "
	read RESP

	if [ -z "$RESP" ]; then
		lines
		echo -e "You did not answer the question."
		exiting
	fi

	
	if [[ ${#RESP} && ("$RESP" =~ "y" || "$RESP" =~ "Y") ]]; then
		echo ""
		echo -n "Enter the PAT(classic) without the \"ghp_\" >>> "
		read TOKEN
	
		if [ -z "$TOKEN" ]; then
			lines
			echo -e "Didn't you just say you have the PAT?"
			exiting
		fi

		NUM2=${#TOKEN}
		
		if [[ $NUM2 != $NUM1 ]]; then
			lines
			echo -e "The TOKEN: $TOKEN which you supplied is not a classic TOKEN.\n"
			echo -e "You've entered a wrong PAT!!!."
			exiting
		fi
	fi
else
	AUSERNAME="$GUSERNAME"
	TOKEN="$GTOKEN"
fi

echo ""
echo -n "Provide the name of the repository >>> "
read REPONAME

if [ -z "$REPONAME" ]; then
	lines
	echo -e "You can't clone a repo without a name..."
	exiting
fi
echo -e "\nYou are now cloning the repository \"$REPONAME\" in the account \"$AUSERNAME\"...\n"

# ........................................................................... X
function git_check()
{
	echo "....................................................."
	if [ $exit_status -eq 0 ]; then
		echo "Repository cloned successfully."
		echo "....................................................."
		echo ""
		echo -e "cd-ing into the repo \"$REPONAME\"..."
		cd "$REPONAME"
		echo ""
		echo -e "Setting up the local user(i.e commit author) for this repo"
		echo -e "..........................................................."
		echo -e "User: $GUSERNAME"
		echo -e "Email: $GEMAIL"
		echo -e "..........................................................."
		echo -e ""
		git config user.name "$GUSERNAME"
		git config user.email "$GEMAIL"


		echo -e "\n....................Tada! All done!...................."
		echo "This repo \"$REPONAME\" has been cloned in this directory: $(pwd)."
		lines
	else
		echo "Oops! something went wrong. Error cloning repository."
		echo "Exit status code: $exit_status"
		echo "....................................................."
		exit 1  # Exit with a non-zero status to indicate an error
	fi
}
# ........................................................................... X

echo -e "......................Cloning repo........................"
if [ -z "$TOKEN" ]; then
	git clone https://github.com/$AUSERNAME/$REPONAME.git
	exit_status=$?
else
	git clone https://ghp_$TOKEN@github.com/$AUSERNAME/$REPONAME.git
	exit_status=$?
fi

git_check

