#!/usr/bin/env bash

function status() {
	echo "$?"
}

path1="$HOME/.xbin/pyfiles"

node=$(2>&1 node -v)
node_status=$(status)
# echo "node_status: $node_status"
npm=$(2>&1 npm -v)
npm_status=$(status)
# echo "npm_status: $npm_status"

if [[ "$node_status" != 0 ]]; then
	echo ""
	echo "nodeJS is not installed."
	echo "Go to => https://nodejs.org/en/download/"
	# exit 1
fi
if [[ "$npm_status" != 0 ]]; then
	echo ""
	echo "npm is not installed."
	echo "Go to => https://nodejs.org/en/download/"
fi

python_command=$("$path1/isGitBash" 2>&1)
file_list=$(find "." -type d \( -name "node_modules" -o -name ".git" \) -prune -o -type f \( -name "index*" -o -name "App*" -o -name "app.json" -o -name "_layout*" -o -name "package.json" \) -print)
# echo "pwd dir #####: $PWD"
# echo "file_list: $file_list"
funcName="$1-Check"
# echo "pwd: $(pwd)"
# echo "s1: $1"
# echo "python_command: $python_command"
# echo "the second batch: "$python_command" "$path1/filter.py" $funcName"
check=$(echo $file_list | "$python_command" "$path1/filter.py" $funcName)
# echo "check: $check"

if [[ "$1" == "dependencies" && "$check" == "True" ]]; then
	echo ""
elif [[ "$check" == "True" ]]; then
	# echo "args: 1: $1"
	appName=$(echo $file_list | "$python_command" "$path1/filter.py" $1)
	# echo "appName #####: $appName"
	echo ""
	echo "Oopsy! cannot install."
	echo "Directory has the app: $appName installed in it already."
	echo "Create/change into a directory that has no react/react-native app"
fi
# echo "something aint right o"
