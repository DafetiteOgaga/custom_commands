#!/bin/bash

function exiting ()
{
	echo -e "\nOperation aborted!!!....................."
	exit 1
}

function get_git_details()
{
	read -p "Enter GitHub username >>> " GUSERNAME
	if [[ -z "$GUSERNAME" ]]; then
		echo -e "You did not answer the question."
		exiting
	fi

	RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "https://api.github.com/users/$GUSERNAME")
	if [ "$RESPONSE" -ne 200 ]; then
		echo "Username \"$GUSERNAME\" does not exist on GitHub or there was an issue confirming the existence of the username."
		exiting
	fi

	read -p "Enter your GitHub personal access token (without the \"ghp_\") >>> " GTOKEN
    GTOKEN="${GTOKEN#ghp_}" #used to remove "ghp_" if user adds it
	if [[ -z "$GTOKEN" ]]; then
		echo -e "You did not answer the question."
		exiting
	fi
}

# ENTRY-POINT

# Kindly supply your Github Username and Personal Access token(without the "ghp_").
GUSERNAME="YOUR_GITHUB_USERNAME"
GTOKEN="YOUR_PERSONAL_ACCESS_TOKEN"
GEMAIL="YOUR_REGISTERED_GITHUB_EMAIL"

REPONAME="$1"
RESP="$2"
exit_status=0

if [[ -z "$GUSERNAME" ]]; then
	get_git_details
fi

if [[ -z "$REPONAME" ]]; then
    echo -ne "\nPlease provide a repository name to delete in \"$GUSERNAME\" >>> "
    read REPONAME

    if [[ -z "$REPONAME" ]]; then
	    echo -ne "\nYou can't delete a repo without a name..."
        exiting
    fi
fi
REPONAME=$(echo "$REPONAME" | sed 's/\/$//') #used to remove trailing "/" if user adds it

EXISTENCE_CHECK_URL="https://api.github.com/repos/$GUSERNAME/$REPONAME"

existence_check=$(curl -s -o /dev/null -w "%{http_code}" -u "$GUSERNAME:ghp_$GTOKEN" $EXISTENCE_CHECK_URL)
if [ $existence_check -eq 200 ]; then
    if [[ -z "$RESP" ]]; then
	    echo -n "Are you sure you want to DELETE the repository \"$REPONAME\" from \"https://github.com/$GUSERNAME\"?... (y/n) >>> "
        read -n 1 -s -r RESP
	    echo -e ""

        if [[ -z "$RESP" ]]; then
		    echo -e "You did not answer the question."
		    exiting

	    elif [[ ${#RESP} != 1 ]]; then
		    echo -e "Invalid response."
		    exiting

	    elif [[ ${#RESP} =~ 1 && ("$RESP" =~ "y" || "$RESP" =~ "Y") ]]; then

            response=$(curl -s -o /dev/null -w "%{http_code}:%{response_code}" -u "$GUSERNAME:ghp_$GTOKEN" -X DELETE $EXISTENCE_CHECK_URL)
            status=$?

            if [ $status -eq 0 ]; then
                if [[ "$response" == "204:204" ]]; then
                    echo "Repository \"$REPONAME\" deleted successfully."

                elif [[ "$response" == "401:401" || "$response" == "403:403" ]]; then
                    echo -e "Error deleting repository: Authentication or permission issue.\nCheck your GitHub credentials or ensure you have the necessary permissions for repository deletion."
                    exiting
                else
                    echo "Error deleting repository: Unexpected response code $response"
                    exiting
                fi
            else
                echo "Unknown error: $response"
                exiting
            fi
	    else
		    echo "Operation cancelled. Repository not deleted."
            exiting
	    fi
    fi
else
    echo -e "\nRepository \"$REPONAME\" may not exist on \"https://github.com/$GUSERNAME\", or you don't have permission to access it."
    exiting
fi


echo ""
if [ -d "$REPONAME" ]; then
    echo -n "Do you want to DELETE the local repository \"$REPONAME/\" from \"$PWD\"? (y/n) >>> "
    read -n 1 -s -r CONFIRM
    echo -e "\n"
    if [[ -z "$CONFIRM" ]]; then
        echo -e "You did not answer the question."
		exiting

	elif [[ ${#CONFIRM} != 1 ]]; then
	    echo -e "Invalid response."
		exiting

	elif [[ ${#CONFIRM} =~ 1 && ("$CONFIRM" =~ "y" || "CONFIRM" =~ "Y") ]]; then
        rm -rf "$REPONAME"
        echo -e "Local repository \"$REPONAME/\" deleted successfully."
    else
        echo "Deletion aborted."
    fi
else
    echo "Directory \"$REPONAME/\" does not exist locally."
fi
